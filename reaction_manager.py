"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏ –≤ Telegram –±–æ—Ç–µ
"""

import logging
from typing import List, Optional
from telegram import Message, Bot
from reactions_config import get_reactions_for_state, REACTIONS_CONFIG

logger = logging.getLogger(__name__)

class ReactionManager:
    def __init__(self, bot: Bot):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ä–µ–∞–∫—Ü–∏–π
        
        Args:
            bot: –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
        """
        self.bot = bot
    
    async def add_reactions_to_message(self, message: Message, state: str) -> bool:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
            state: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–±–æ—Ä–∞ —Ä–µ–∞–∫—Ü–∏–π
            
        Returns:
            True –µ—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
        """
        try:
            reactions = get_reactions_for_state(state)
            if not reactions:
                logger.warning(f"–ù–µ—Ç —Ä–µ–∞–∫—Ü–∏–π –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è: {state}")
                return False
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏
            await self.bot.set_message_reaction(
                chat_id=message.chat_id,
                message_id=message.message_id,
                reaction=[{"type": "emoji", "emoji": emoji} for emoji in reactions],
                is_big=False,  # –û–±—ã—á–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ä–µ–∞–∫—Ü–∏–π
                allow_multiple_reactions=False  # –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏
            )
            
            logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–µ–∞–∫—Ü–∏–∏ {reactions} –∫ —Å–æ–æ–±—â–µ–Ω–∏—é {message.message_id}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–∞–∫—Ü–∏–π: {e}")
            return False
    
    async def add_custom_reactions(self, message: Message, reactions: List[str]) -> bool:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
            reactions: –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            
        Returns:
            True –µ—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ä–µ–∞–∫—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            valid_reactions = [r for r in reactions if r in REACTIONS_CONFIG]
            
            if not valid_reactions:
                logger.warning(f"–ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π –≤ —Å–ø–∏—Å–∫–µ: {reactions}")
                return False
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏
            await self.bot.set_message_reaction(
                chat_id=message.chat_id,
                message_id=message.message_id,
                reaction=[{"type": "emoji", "emoji": emoji} for emoji in valid_reactions],
                is_big=False,  # –û–±—ã—á–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ä–µ–∞–∫—Ü–∏–π
                allow_multiple_reactions=False  # –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏
            )
            
            logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ {valid_reactions} –∫ —Å–æ–æ–±—â–µ–Ω–∏—é {message.message_id}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ä–µ–∞–∫—Ü–∏–π: {e}")
            return False
    
    async def remove_reactions_from_message(self, message: Message) -> bool:
        """
        –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ä–µ–∞–∫—Ü–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
            
        Returns:
            True –µ—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
        """
        try:
            await self.bot.set_message_reaction(
                chat_id=message.chat_id,
                message_id=message.message_id,
                reaction=[]
            )
            
            logger.info(f"–£–¥–∞–ª–µ–Ω—ã —Ä–µ–∞–∫—Ü–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è {message.message_id}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–µ–∞–∫—Ü–∏–π: {e}")
            return False
    
    async def enforce_reactions(self, message: Message, state: str) -> bool:
        """
        –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
            state: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–±–æ—Ä–∞ —Ä–µ–∞–∫—Ü–∏–π
            
        Returns:
            True –µ—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
        """
        try:
            reactions = get_reactions_for_state(state)
            if not reactions:
                logger.warning(f"–ù–µ—Ç —Ä–µ–∞–∫—Ü–∏–π –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è: {state}")
                return False
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏
            await self.bot.set_message_reaction(
                chat_id=message.chat_id,
                message_id=message.message_id,
                reaction=[{"type": "emoji", "emoji": emoji} for emoji in reactions],
                is_big=False,
                allow_multiple_reactions=False
            )
            
            logger.info(f"–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ä–µ–∞–∫—Ü–∏–∏ {reactions} –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ä–µ–∞–∫—Ü–∏–π: {e}")
            return False
    
    def get_reaction_description(self, emoji: str) -> str:
        """
        –ü–æ–ª—É—á–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏
        
        Args:
            emoji: –≠–º–æ–¥–∑–∏ —Ä–µ–∞–∫—Ü–∏–∏
            
        Returns:
            –û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –∏–ª–∏ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        """
        reaction_config = REACTIONS_CONFIG.get(emoji, {})
        return reaction_config.get("description", "")
    
    def format_reactions_help(self, state: str) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        
        Args:
            state: –°–æ—Å—Ç–æ—è–Ω–∏–µ
            
        Returns:
            –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞
        """
        reactions = get_reactions_for_state(state)
        if not reactions:
            return ""
        
        help_text = "üéØ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏:</b>\n\n"
        for emoji in reactions:
            config = REACTIONS_CONFIG.get(emoji, {})
            name = config.get("name", "")
            description = config.get("description", "")
            help_text += f"{emoji} <b>{name}</b> - {description}\n"
        
        return help_text
